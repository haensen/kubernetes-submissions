name: Build and publish images for todo-project

on:
  push:
    branches:
      - "**"
    paths:
      - "!project/kustomization.yaml"
      - "!project/**" # Don't run for now
      - "!.github/workflows/ci-project.yaml"
    tags:
      - "!**" # Don't trigger on releases

env:
  TODO_APP: todo_app
  TODO_BACKEND: todo_backend
  RANDOM_WIKI_TODO: random_wiki_todo
  DB_BACKUP: db_backup
  BROADCASTER: broadcaster
  NAMESPACE: project

jobs:
  build-todo-app-image:
    name: Build todo app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name : 'Form the image name'
        run: echo "IMAGE_TAG=hanseni/$TODO_APP:$GITHUB_SHA" >> $GITHUB_ENV
      - name: Build
        run: docker build --tag $IMAGE_TAG project/$TODO_APP/.
      - name: Publish
        run: docker push $IMAGE_TAG

  build-todo-backend-image:
    name: Build todo backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name : 'Form the image name'
        run: echo "IMAGE_TAG=hanseni/$TODO_BACKEND:$GITHUB_SHA" >> $GITHUB_ENV
      - name: Build
        run: docker build --tag $IMAGE_TAG project/$TODO_BACKEND/.
      - name: Publish
        run: docker push $IMAGE_TAG

  build-random-wiki-todo-image:
    name: Build random wiki todo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name : 'Form the image name'
        run: echo "IMAGE_TAG=hanseni/$RANDOM_WIKI_TODO:$GITHUB_SHA" >> $GITHUB_ENV
      - name: Build
        run: docker build --tag $IMAGE_TAG project/$RANDOM_WIKI_TODO/.
      - name: Publish
        run: docker push $IMAGE_TAG

  build-db-backup-image:
    name: Build db backup image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name : 'Form the image name'
        run: echo "IMAGE_TAG=hanseni/$DB_BACKUP:$GITHUB_SHA" >> $GITHUB_ENV
      - name: Build
        run: docker build --tag $IMAGE_TAG project/$DB_BACKUP/.
      - name: Publish
        run: docker push $IMAGE_TAG

  build-broadcaster-image:
    name: Build broadcaster image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name : 'Form the image name'
        run: echo "IMAGE_TAG=hanseni/$BROADCASTER:$GITHUB_SHA" >> $GITHUB_ENV
      - name: Build
        run: docker build --tag $IMAGE_TAG project/$BROADCASTER/.
      - name: Publish
        run: docker push $IMAGE_TAG

  update-kustomization-yaml:
    name: Update kustomization to use the new images
    runs-on: ubuntu-latest
    needs: [build-todo-app-image, build-todo-backend-image, build-random-wiki-todo-image, build-db-backup-image, build-broadcaster-image]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      - name : 'Form the image name 1'
        run: echo "IMAGE_TAG1=hanseni/$TODO_APP:$GITHUB_SHA" >> $GITHUB_ENV
      - name : 'Form the image name 2'
        run: echo "IMAGE_TAG2=hanseni/$TODO_BACKEND:$GITHUB_SHA" >> $GITHUB_ENV
      - name : 'Form the image name 3'
        run: echo "IMAGE_TAG3=hanseni/$RANDOM_WIKI_TODO:$GITHUB_SHA" >> $GITHUB_ENV
      - name : 'Form the image name 4'
        run: echo "IMAGE_TAG4=hanseni/$DB_BACKUP:$GITHUB_SHA" >> $GITHUB_ENV
      - name : 'Form the image name 5'
        run: echo "IMAGE_TAG5=hanseni/$BROADCASTER:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Edit kustomization.yaml to use the new images
        run: |-
          cd project
          kustomize edit set namespace $NAMESPACE
          kustomize edit set image TODO-APP-IMAGE=$IMAGE_TAG1
          kustomize edit set image TODO-BACKEND-IMAGE=$IMAGE_TAG2
          kustomize edit set image RANDOM-WIKI-TODO-IMAGE=$IMAGE_TAG3
          kustomize edit set image DB-BACKUP-IMAGE=$IMAGE_TAG4
          kustomize edit set image BROADCASTER-IMAGE=$IMAGE_TAG5

      - name: Commit edited kustomization.yaml
        uses: EndBug/add-and-commit@v9
        with:
          add: 'project/kustomization.yaml'
          message: kustomization.yaml updated to use the new images from ${{ github.sha }}